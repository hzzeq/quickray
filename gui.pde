/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void window_options_draw(PApplet appc, GWinData data) { //_CODE_:window_options:211708:
  appc.background(230);
} //_CODE_:window_options:211708:

public void textfield_path_change(GTextField source, GEvent event) { //_CODE_:textfield_path:713420:
  
} //_CODE_:textfield_path:713420:

public void button_render_click(GButton source, GEvent event) { //_CODE_:button_render:678444:
  
} //_CODE_:button_render:678444:

public void button_export_click(GButton source, GEvent event) { //_CODE_:button_export:630573:
  frame.save(textfield_path.getText());
} //_CODE_:button_export:630573:

public void button_save_click(GButton source, GEvent event) { //_CODE_:button_save:670057:
  
} //_CODE_:button_save:670057:

public void textfield_objects_change(GTextField source, GEvent event) { //_CODE_:textfield_objects:735522:
  
} //_CODE_:textfield_objects:735522:

public void button_add_click(GButton source, GEvent event) { //_CODE_:button_add:459054:
  
} //_CODE_:button_add:459054:

public void button_browse_click(GButton source, GEvent event) { //_CODE_:button_browse:232316:
  selectOutput("Browse", "setFileSelection");
} //_CODE_:button_browse:232316:

public void button_sub_click(GButton source, GEvent event) { //_CODE_:button_sub:421526:
  println("button_sub - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:button_sub:421526:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Render Output");
  window_options = GWindow.getWindow(this, "Options", 0, 0, 250, 250, P2D);
  window_options.noLoop();
  window_options.setActionOnClose(G4P.EXIT_APP);
  window_options.addDrawHandler(this, "window_options_draw");
  textfield_path = new GTextField(window_options, 10, 30, 150, 20, G4P.SCROLLBARS_NONE);
  textfield_path.setOpaque(true);
  textfield_path.addEventHandler(this, "textfield_path_change");
  label_output = new GLabel(window_options, 10, 10, 70, 20);
  label_output.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label_output.setText("Output path");
  label_output.setOpaque(false);
  label_objects = new GLabel(window_options, 10, 60, 50, 20);
  label_objects.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label_objects.setText("Objects");
  label_objects.setOpaque(false);
  button_render = new GButton(window_options, 10, 210, 70, 30);
  button_render.setText("Render");
  button_render.addEventHandler(this, "button_render_click");
  button_export = new GButton(window_options, 90, 210, 70, 30);
  button_export.setText(".. to Image");
  button_export.addEventHandler(this, "button_export_click");
  button_save = new GButton(window_options, 170, 210, 70, 30);
  button_save.setText("Save");
  button_save.addEventHandler(this, "button_save_click");
  textfield_objects = new GTextField(window_options, 10, 80, 230, 120, G4P.SCROLLBARS_NONE);
  textfield_objects.setOpaque(true);
  textfield_objects.addEventHandler(this, "textfield_objects_change");
  button_add = new GButton(window_options, 200, 60, 18, 18);
  button_add.setText("+");
  button_add.setTextBold();
  button_add.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  button_add.addEventHandler(this, "button_add_click");
  button_browse = new GButton(window_options, 170, 30, 70, 20);
  button_browse.setText("Browse...");
  button_browse.addEventHandler(this, "button_browse_click");
  button_sub = new GButton(window_options, 222, 60, 18, 18);
  button_sub.setText("-");
  button_sub.setTextBold();
  button_sub.setLocalColorScheme(GCScheme.RED_SCHEME);
  button_sub.addEventHandler(this, "button_sub_click");
  window_options.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window_options;
GTextField textfield_path; 
GLabel label_output; 
GLabel label_objects; 
GButton button_render; 
GButton button_export; 
GButton button_save; 
GTextField textfield_objects; 
GButton button_add; 
GButton button_browse; 
GButton button_sub; 
